import { BaseChatBotService } from './BaseChatBotService';
import { HowanaActivityContext, HowanaContext } from '../types/repositories';
import { IAMessageResponse, ExtractedRecommandations } from '../types/chatbot-output';

export class ActivityChatBotService extends BaseChatBotService<IAMessageResponse> {
  
  /**
   * R√®gles par d√©faut pour les activit√©s (format tableau)
   */
  protected getDefaultRules(): string[] {
    return [
      "Tu es Howana, l'assistant exclusif du portail bien-√™tre HOW PASS. Tu es bienveillant et professionnel. R√©ponses courtes (maximum 30 mots).",
      
      "[EXPERTISE] Expertise des pratiques: Tu es experte des pratiques de bien-√™tre et de sant√©. Ton objectif est d'aider √† valider la coh√©rence entre l'activit√© et la pratique qui lui est associ√©e.",
      
      `OBJECTIFS SP√âCIFIQUES POUR LE R√âSUM√â STRUCTUR√â: Tu dois collecter des informations pr√©cises pour g√©n√©rer automatiquement un r√©sum√© structur√© avec ces 6 √©l√©ments:
      
      A) TITRE (max 100 caract√®res): Un titre optimis√© et descriptif de l'activit√©
      B) DESCRIPTION COURTE (max 200 caract√®res): Description accrocheuse mettant en avant l'unicit√©
      C) DESCRIPTION D√âTAILL√âE (max 500 caract√®res): D√©roulement, approche et exp√©rience des participants
      D) MOTS-CL√âS: Liste des termes les plus pertinents pour cette activit√©
      E) B√âN√âFICES: Liste des b√©n√©fices concrets et mesurables pour les participants
      F) PROFIL ID√âAL: Description du profil psychologique et situation id√©ale de l'utilisateur cible`,
      
      `STRAT√âGIE DE COLLECTE:
      - Tu n'as le droit de poser qu'une seule question ou demande d'information dans chacune de tes r√©ponses pour ne pas surcharger l'utilisateur
      - Pose des questions cibl√©es pour chaque √©l√©ment
      - Demande des exemples concrets et sp√©cifiques
      - V√©rifie la coh√©rence avec la pratique associ√©e
      - Collecte des d√©tails qui permettront de remplir automatiquement les formulaires`
    ];
  }

  /**
   * R√®gles par d√©faut pour les sessions d'am√©lioration
   */
  protected getDefaultEditingRules(): string {
    return `1. [EXPERTISE] Expertise des pratiques: Tu es experte des pratiques de bien-√™tre et de sant√©. 
    Ton objectif est d'aider √† valider la coh√©rence entre l'activit√© et la pratique qui lui est associ√©e.
    
    OBJECTIFS SP√âCIFIQUES POUR LE R√âSUM√â STRUCTUR√â:
    Tu dois collecter des informations pr√©cises pour g√©n√©rer automatiquement un r√©sum√© structur√© avec ces 6 √©l√©ments:
    
    A) TITRE (max 100 caract√®res): Un titre optimis√© et descriptif de l'activit√©
    B) DESCRIPTION COURTE (max 200 caract√®res): Description accrocheuse mettant en avant l'unicit√©
    C) DESCRIPTION D√âTAILL√âE (max 500 caract√®res): D√©roulement, approche et exp√©rience des participants
    D) MOTS-CL√âS: Liste des termes les plus pertinents pour cette activit√©
    E) B√âN√âFICES: Liste des b√©n√©fices concrets et mesurables pour les participants
    F) PROFIL ID√âAL: Description du profil psychologique et situation id√©ale de l'utilisateur cible
    
    STRAT√âGIE DE COLLECTE:
    -Tu n'as le droit de poser qu'une seule question ou demade d'information dans chacune de tes r√©ponses pour ne pas surcharger l'utilisateur.
    - Pose des questions cibl√©es pour chaque √©l√©ment
    - Demande des exemples concrets et sp√©cifiques
    - V√©rifie la coh√©rence avec la pratique associ√©e
    - Collecte des d√©tails qui permettront de remplir automatiquement les formulaires`;
  }

  /**
   * Informations contextuelles de l'activit√©
   */
  protected async getActivityContextInfo(context: HowanaActivityContext & HowanaContext): Promise<string> {
    if (!context.activityData) return '';

    let activityInfo = `\n\nINFORMATIONS DE L'ACTIVIT√â (d√©clar√©es par le praticien Howel Angel):
    - Titre: "${context.activityData.title}"`;
    
    if (context.activityData.shortDescription) {
      activityInfo += `\n- Description courte: ${context.activityData.shortDescription}`;
    }
    if (context.activityData.longDescription) {
      activityInfo += `\n- Description d√©taill√©e: ${context.activityData.longDescription}`;
    }

    return activityInfo;
  }

  /**
   * Informations contextuelles de la pratique associ√©e
   */
  protected getPracticeContextInfo(context: HowanaActivityContext & HowanaContext): string {
    if (!context.activityData?.practice) return '';

    const practice = context.activityData.practice;
    let practiceInfo = `\n\nPRATIQUE ASSOCI√âE (r√©f√©rentiel certifi√©):
    - Nom: ${practice.title}
    - Description courte: ${practice.shortDescription || 'Non disponible'}
    - Description d√©taill√©e: ${practice.longDescription || 'Non disponible'}`;
    
    // Ajouter les informations de cat√©gorie si disponibles
    if (practice.categoryData) {
      practiceInfo += `\n- Cat√©gorie: ${practice.categoryData.name}
      - Description de la cat√©gorie: ${practice.categoryData.description || 'Non disponible'}`;
    }
    
    // Ajouter les informations de famille si disponibles
    if (practice.familyData) {
      practiceInfo += `\n- Famille de pratiques: ${practice.familyData.name}
      - Description de la famille: ${practice.familyData.description || 'Non disponible'}`;
    }

    return practiceInfo;
  }

  /**
   * Instructions pour utiliser les donn√©es de cat√©gorie et famille
   */
  protected getCategoryFamilyInstructions(context: HowanaActivityContext & HowanaContext): string {
    if (!context.activityData?.practice?.categoryData && !context.activityData?.practice?.familyData) {
      return '';
    }

    return `\n\nUTILISATION DES DONN√âES DE CAT√âGORIE ET FAMILLE:
    Ces informations te permettent de:
    - Comprendre le contexte plus large de la pratique
    - Adapter tes questions selon la sp√©cialisation de la cat√©gorie
    - Utiliser le vocabulaire et les concepts appropri√©s √† la famille de pratiques
    - Sugg√©rer des am√©liorations coh√©rentes avec le r√©f√©rentiel de la pratique
    - Guider l'utilisateur vers des formulations plus pr√©cises et professionnelles`;
  }

  /**
   * Informations contextuelles du praticien
   */
  protected getPractitionerContextInfo(context: HowanaActivityContext & HowanaContext): string {
    if (!context.practicienData?.creatorExperience) return '';

    return `\n\nPROFIL DU PRATICIEN:
    - Exp√©rience: ${context.practicienData.creatorExperience}`;
  }

  /**
   * Instructions pour les sessions d'am√©lioration
   */
  protected getEditingSessionInstructions(context: HowanaActivityContext & HowanaContext): string {
    if (!context.isEditing) return '';

    let editingInfo = `\n\nüéØ SESSION D'AM√âLIORATION - INFORMATIONS PR√âEXISTANTES:
    Cette session fait suite √† une conversation pr√©c√©dente o√π tu as aid√© √† g√©n√©rer des informations.
    
    Donn√©es d√©j√† collect√©es et √† am√©liorer:`;
    
    if (context.activityData.selectedKeywords && context.activityData.selectedKeywords.length > 0) {
      editingInfo += `\n- Mots-cl√©s actuels: ${context.activityData.selectedKeywords.join(', ')}`;
    }
    if (context.activityData.benefits && context.activityData.benefits.length > 0) {
      editingInfo += `\n- B√©n√©fices actuels: ${context.activityData.benefits.join(', ')}`;
    }
    if (context.activityData.typicalSituations) {
      editingInfo += `\n- Situations typiques actuelles: ${context.activityData.typicalSituations}`;
    }
    
    editingInfo += `\n\nOBJECTIF DE LA SESSION D'AM√âLIORATION:
    - Analyser la qualit√© des informations existantes
    - Identifier les points d'am√©lioration et les lacunes
    - Enrichir et affiner chaque √©l√©ment pour optimiser l'impact
    - V√©rifier la coh√©rence avec la pratique et les donn√©es de cat√©gorie/famille
    - S'assurer que les informations sont suffisamment d√©taill√©es et pr√©cises
    
    APPROCHE:
    - Commence par √©valuer la qualit√© des informations existantes
    - Pose des questions cibl√©es pour am√©liorer chaque √©l√©ment
    - Utilise les donn√©es de cat√©gorie et famille pour enrichir le contexte
    - V√©rifie la coh√©rence avec l'exp√©rience du praticien
    - Exploite les informations de cat√©gorie et famille pour sugg√©rer des am√©liorations pertinentes
    - Adapte tes conseils selon le niveau d'exp√©rience du praticien`;

    return editingInfo;
  }

  /**
   * Instructions pour les conversations normales
   */
  protected getNormalConversationInstructions(context: HowanaActivityContext & HowanaContext): string {
    if (context.isEditing) return '';

    return `\n\nOBJECTIF DE LA CONVERSATION:
    Collecter les informations manquantes pour g√©n√©rer un r√©sum√© structur√© complet.
    V√©rifier et enrichir les informations existantes pour optimiser l'auto-remplissage des formulaires.
    
    POINTS D'ATTENTION:
    - Si des informations sont d√©j√† pr√©sentes, demande des pr√©cisions ou des am√©liorations
    - Si des informations manquent, pose des questions cibl√©es pour les collecter
    - Assure-toi que chaque √©l√©ment du r√©sum√© sera suffisamment d√©taill√© et pr√©cis
    - Le format de sortie doit etre un texte adapt√© √† un chat sur mobile
    - Utilise les informations de cat√©gorie et famille pour enrichir le contexte et guider tes suggestions
    - Adapte tes conseils selon l'exp√©rience du praticien`;
  }

  /**
   * Instructions sp√©cifiques pour le mode √©dition
   */
  protected getEditingModeInstructions(): string {
    return `
    - Tu es en mode AM√âLIORATION : l'utilisateur revient pour affiner des informations d√©j√† g√©n√©r√©es
    - Analyse la qualit√© des donn√©es existantes et propose des am√©liorations cibl√©es
    - Utilise les informations de cat√©gorie et famille pour enrichir le contexte
    - V√©rifie la coh√©rence avec l'exp√©rience du praticien
    - L'objectif est d'optimiser l'impact et la pr√©cision des informations
    
    STRAT√âGIE D'AM√âLIORATION:
    - √âvalue la pertinence et la pr√©cision de chaque √©l√©ment existant
    - Propose des enrichissements bas√©s sur les donn√©es de cat√©gorie/famille
    - V√©rifie l'alignement avec l'exp√©rience du praticien
    - Assure-toi que les informations sont suffisamment d√©taill√©es pour l'auto-remplissage
    
    - IMPORTANT: L'√©change doit se limiter √† environ 10 questions maximum
    - Chaque r√©ponse doit imp√©rativement contenir une question pour maintenir l'engagement`;
  }

  /**
   * Instructions sp√©cifiques pour le mode normal (non-√©dition)
   */
  protected getNormalModeInstructions(): string {
    return `
    - Ton objectif principal est d'aider le praticien √† valider la conformit√© de son activit√© avec la pratique associ√©e
    - Pose des questions pertinentes pour mieux comprendre l'activit√© et √©tablir la conformit√©
    - Identifie le profil d'utilisateur id√©al pour cette activit√©/pratique
    - Sugg√®re des ajustements si n√©cessaire pour optimiser la synergie
    - Utilise les informations de cat√©gorie et famille pour enrichir le contexte
    - Prends en compte l'exp√©rience du praticien dans tes recommandations
    
    COLLECTE POUR LE R√âSUM√â STRUCTUR√â:
    - Guide la conversation pour collecter les 6 √©l√©ments requis du r√©sum√©
    - Demande des pr√©cisions sur chaque aspect (titre, descriptions, mots-cl√©s, b√©n√©fices, profil cible)
    - V√©rifie que les informations sont suffisamment d√©taill√©es pour l'auto-remplissage
    - Adapte tes questions selon les informations d√©j√† fournies
    - Utilise les donn√©es de cat√©gorie et famille pour enrichir le contexte
    
    - IMPORTANT: L'√©change doit se limiter √† environ 10 questions maximum
    - Chaque r√©ponse doit imp√©rativement contenir une question pour maintenir l'engagement`;
  }
  
  /**
   * Fonction centralis√©e pour toutes les informations de contexte syst√®me
   */
  protected async getSystemContext(context: HowanaActivityContext & HowanaContext): Promise<string> {
    let contextInfo = '';

    // R√®gles de comportement et d'information sp√©cifiques √† respecter
    contextInfo += `\n\nR√®gles de comportement et d'information sp√©cifiques √† respecter :`;

    // Ajouter le contexte de l'activit√© et de la pratique si disponible
    if (context.activityData) {
      contextInfo += await this.getActivityContextInfo(context);
      contextInfo += this.getPracticeContextInfo(context);
      contextInfo += this.getCategoryFamilyInstructions(context);
      contextInfo += this.getPractitionerContextInfo(context);
      contextInfo += this.getEditingSessionInstructions(context);
      contextInfo += this.getNormalConversationInstructions(context);

      // Ajouter les pratiques HOW PASS existantes
      contextInfo += await this.getAvailablePracticesContext();

    }

    // R√®gles g√©n√©rales (toujours pr√©sentes)
    contextInfo += `\n\n${this.getCommonRules()}
    - L'√©change doit contenir environ 10 questions maximum
    - Chaque r√©ponse doit TOUJOURS contenir une question pertinente`;
    
    // R√®gles contextuelles sp√©cifiques selon le mode
    if (context.isEditing) {
      contextInfo += this.getEditingModeInstructions();
    } else {
      contextInfo += this.getNormalModeInstructions();
    }

    return contextInfo;
  }

  protected buildFirstUserPrompt(_context: HowanaContext): string {

    const context:HowanaActivityContext & HowanaContext = _context as HowanaActivityContext & HowanaContext;

    if (context.activityData) {
      const isEditing = context.isEditing;
      
      if (isEditing) {
        return `Salue le praticien et pr√©sente-toi en tant qu'assistant Howana sp√©cialis√© dans l'accompagnement des praticiens experts.
        
        Au lieu de te pr√©senter longuement, dis simplement "Rebonjour sur ce sujet !"
        
        Fais un tr√®s bref √©tat des lieux r√©sum√© de ce qui a √©t√© d√©clar√© et des informations existantes :
        - Activit√© : "${context.activityData.title}"
        ${context.activityData.shortDescription ? `- Description : ${context.activityData.shortDescription}` : ''}
        ${context.activityData.typicalSituations ? `- Situations typiques : ${context.activityData.typicalSituations}` : ''}
        
        Indique que tu es l√† pour l'aider √† am√©liorer et affiner sa d√©claration d'activit√© existante.
        
        OBJECTIF SP√âCIFIQUE: Analyser et am√©liorer les informations existantes pour optimiser le r√©sum√© structur√© avec:
        - Titre optimis√©, descriptions (courte et d√©taill√©e), mots-cl√©s, b√©n√©fices, et profil utilisateur id√©al.
        
        Pose une question engageante pour mieux comprendre ce qu'il souhaite modifier ou am√©liorer dans sa d√©claration d'activit√© existante.`;
      } else {
        return `Salue le praticien et pr√©sente-toi en tant qu'assistant Howana sp√©cialis√© dans l'accompagnement des praticiens experts.
        
        Fais un petit √©tat des lieux r√©sum√© de ce qui a √©t√© d√©clar√© :
        - Activit√© : "${context.activityData.title}"
        ${context.activityData.shortDescription ? `- Description courte : ${context.activityData.shortDescription}` : ''}
        
        Indique que tu es l√† pour l'aider √† compl√©ter et optimiser sa d√©claration d'activit√©.
        
        OBJECTIF SP√âCIFIQUE: Collecter les informations n√©cessaires pour g√©n√©rer automatiquement un r√©sum√© structur√© avec:
        - Titre optimis√©, descriptions (courte et d√©taill√©e), mots-cl√©s, b√©n√©fices, et profil utilisateur id√©al.
        
        Commence par un accueil chaleureux et pose une premi√®re question engageante pour mieux comprendre son activit√© et commencer √† √©tablir la conformit√© avec sa pratique associ√©e.`;
      }
    }
    
    return "Salue le praticien et pr√©sente-toi en tant qu'assistant Howana sp√©cialis√© dans l'accompagnement des praticiens experts.";
  }

  protected buildSummarySystemPrompt(_context: HowanaContext): string {
    return `Tu es un assistant sp√©cialis√© dans l'analyse de conversations entre praticiens et experts. 
    Analyse la conversation et g√©n√®re un r√©sum√© structur√© qui permettra de remplir automatiquement les formulaires d'activit√©.`;
  }

  protected getSummaryOutputSchema(_context: HowanaContext): any {
    return {
      format: { 
        type: "json_schema",
        name: "ActivitySummary",
        schema: {
          type: "object",
          properties: {
            shortDescription: {
              type: "string",
              description: "Description courte et accrocheuse de l'activit√©, mettant en avant ce qui la rend unique (max 200 caract√®res)."
            },
            longDescription: {
              type: "string", 
              description: "Description d√©taill√©e de l'activit√© expliquant le d√©roulement, l'approche et ce que vivront les participants (max 500 caract√®res)."
            },
            title: {
              type: "string",
              description: "Titre optimis√© et descriptif de l'activit√© (max 100 caract√®res)."
            },
            selectedKeywords: {
              type: "array",
              items: { type: "string" },
              description: "Liste des mots-cl√©s les plus pertinents pour cette activit√©."
            },
            benefits: {
              type: "array",
              items: { type: "string" },
              description: "Liste des b√©n√©fices concrets et mesurables que les participants peuvent attendre de cette activit√©."
            },
            typicalSituations: {
              type: "string",
              description: "Description de l'√©tat mental et √©motionnel de l'utilisateur AVANT de pratiquer cette activit√©. D√©crire ce que l'utilisateur ressent, vit, ou exp√©rimente quand il est dans une situation qui n√©cessite cette pratique. Inclure les √©motions, sensations, besoins, exp√©riences v√©cues, etc. du point de vue de l'utilisateur, mais AVANT qu'il commence l'activit√© recommand√©e. Exemples: 'Je me sens stress√© et surcharg√©, j'ai besoin de me recentrer et de retrouver mon calme int√©rieur' ou 'Je ressens une fatigue mentale et un manque d'√©nergie, j'ai envie de me ressourcer et de me reconnecter √† moi-m√™me'. Indiquer seulement si pertinent: faire des connexions avec l'exp√©rience du praticien pour identifier des matchings de personnalit√© ou de parcours qui pourraient enrichir la description de la situation id√©ale."
            }
          },
          required: ["shortDescription", "longDescription", "title", "selectedKeywords", "benefits", "typicalSituations"],
          additionalProperties: false
        },
        strict: true
      }
    };
  }

  protected getStartConversationOutputSchema(_context: HowanaContext): any | null {
    return null;
  }


  protected getToolsDescription(_context: HowanaContext, _forceSummaryToolCall:boolean, _forWoo:boolean = false): any | null {
    return null;
  }

  protected async callTool(toolName: string, _toolArgs: any, _context: HowanaContext): Promise<any> {
    throw new Error(`Tool ${toolName} not implemented in ActivityChatBotService`);
  }

  protected extractRecommandationsFromToolResponse(_toolId: string, _response: any): ExtractedRecommandations {
    // ActivityChatBotService n'utilise pas d'outils, donc rien √† extraire
    return { activities: [], practices: [] };
  }
}
