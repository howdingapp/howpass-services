import { RecommendationChatBotService } from './RecommendationChatBotService';
import { ConversationContext } from '../types/conversation';
import { ChatBotOutputSchema } from '../types';

export class BilanChatBotService extends RecommendationChatBotService {
  
  protected override buildSystemPrompt(context: ConversationContext): string {
    let basePrompt = `Tu es Howana, un assistant personnel et confident sp√©cialis√© dans le bien-√™tre et les activit√©s de sant√©. 
    Tu es bienveillant.  R√©ponses courtes (maximum 30 mots).`;

    // R√®gles de comportement et d'information sp√©cifiques √† respecter
    basePrompt += `\n\nR√®gles de comportement et d'information sp√©cifiques √† respecter :`;

    if (context.aiRules && Array.isArray(context.aiRules) && context.aiRules.length > 0) {
      // Filtrer seulement les r√®gles actives
      const activeRules = context.aiRules.filter((rule) => rule.isActive);
      
      if (activeRules.length > 0) {
        // Trier les r√®gles par priorit√© (priorit√© 1 = plus forte)
        const sortedRules = activeRules.sort((a, b) => a.priority - b.priority);
        
        sortedRules.forEach((rule, index) => {
          basePrompt += `\n${index + 1}. [${rule.type.toUpperCase()}] ${rule.name}: ${rule.description}`;
        });
      }
    } else {
      // COMPORTEMENT PAR D√âFAUT : Howana analyste du bilan et accompagnateur
      basePrompt += `\n1. [BILAN] Analyse du bilan et accompagnement: Tu es sp√©cialis√©e dans l'analyse des bilans de bien-√™tre 
      et l'accompagnement personnalis√©. Ton objectif est d'aider l'utilisateur √† comprendre son bilan, 
      √† identifier les points d'am√©lioration et √† lui proposer des recommandations adapt√©es.`;
    }

    // Ajouter le contexte sp√©cifique au bilan
    if (context.aiRules && Array.isArray(context.aiRules) && context.aiRules.length > 0) {
      basePrompt += `\n\nL'utilisateur vient de remplir son bilan de bien-√™tre. Utilise ces informations pour appliquer tes r√®gles personnalis√©es.`;
    } else {
      basePrompt += `\n\nL'utilisateur vient de remplir son bilan de bien-√™tre. 
      Aide-le √† comprendre ses r√©sultats, identifie les points d'am√©lioration et propose des recommandations personnalis√©es.`;
    }

    // R√®gles g√©n√©rales (toujours pr√©sentes)
    basePrompt += `\n\nR√®gles importantes:
    - R√©ponds toujours en fran√ßais
    - Sois concis mais utile
    - Reste professionnel et bienveillant
    - Si tu ne sais pas quelque chose, dis-le honn√™tement`;

    // Ajouter le contexte de la derni√®re recommandation Howana si disponible
    if (context.lastHowanaRecommandation) {
      basePrompt += `\n\nCONTEXTE DES DERNIERS ECHANGES:`;
      
      if (context.lastHowanaRecommandation.userProfile) {
        const profile = context.lastHowanaRecommandation.userProfile;
        if (profile.supposedEmotionalState) {
          basePrompt += `\n- √âtat √©motionnel pr√©c√©dent: ${profile.supposedEmotionalState}`;
        }
        if (profile.supposedCurrentNeeds && profile.supposedCurrentNeeds.length > 0) {
          basePrompt += `\n- Besoins pr√©c√©dents: ${profile.supposedCurrentNeeds.join(', ')}`;
        }
        if (profile.supposedPreferences && profile.supposedPreferences.length > 0) {
          basePrompt += `\n- Pr√©f√©rences pr√©c√©dentes: ${profile.supposedPreferences.join(', ')}`;
        }
        if (profile.supposedConstraints && profile.supposedConstraints.length > 0) {
          basePrompt += `\n- Contraintes pr√©c√©dentes: ${profile.supposedConstraints.join(', ')}`;
        }
      }

      if (context.lastHowanaRecommandation.recommendedCategories && context.lastHowanaRecommandation.recommendedCategories.length > 0) {
        const categories = context.lastHowanaRecommandation.recommendedCategories.map(cat => cat.name).join(', ');
        basePrompt += `\n- Pratiques recommand√©es pr√©c√©demment: ${categories}`;
      }

      if (context.lastHowanaRecommandation.recommendedActivities && context.lastHowanaRecommandation.recommendedActivities.length > 0) {
        const activities = context.lastHowanaRecommandation.recommendedActivities.map(act => act.name).join(', ');
        basePrompt += `\n- Activit√©s recommand√©es pr√©c√©demment: ${activities}`;
      }

      if (context.lastHowanaRecommandation.activitiesReasons) {
        basePrompt += `\n- Raisons des activit√©s pr√©c√©dentes: ${context.lastHowanaRecommandation.activitiesReasons}`;
      }

      if (context.lastHowanaRecommandation.practicesReasons) {
        basePrompt += `\n- Raisons des pratiques pr√©c√©dentes: ${context.lastHowanaRecommandation.practicesReasons}`;
      }

      if (context.lastHowanaRecommandation.importanteKnowledge && context.lastHowanaRecommandation.importanteKnowledge.length > 0) {
        basePrompt += `\n- Connaissances importantes pr√©c√©dentes: ${context.lastHowanaRecommandation.importanteKnowledge.join(', ')}`;
      }

      basePrompt += `\n\nUtilise ces informations pour comprendre l'√©volution de l'utilisateur et adapter tes questions. √âvite de r√©p√©ter exactement les m√™mes suggestions.`;
    }
    
    // R√®gles contextuelles sp√©cifiques (uniquement si pas d'aiRules)
    if (!context.aiRules || !Array.isArray(context.aiRules) || context.aiRules.length === 0) {
      basePrompt += `
    - Analyse les donn√©es du bilan pour comprendre l'√©tat actuel de l'utilisateur
    - Identifie les points d'am√©lioration et les forces
    - Propose des activit√©s et pratiques adapt√©es aux scores du bilan
    - Accompagne l'utilisateur dans la compr√©hension de ses r√©sultats
    - D√âCOUVRE DES SCORES PERSONNALIS√âS: Pose des questions pour identifier d'autres aspects du bien-√™tre non couverts par le bilan standard
    - Demande des scores de 1 √† 9 pour ces nouvelles cat√©gories (1 = tr√®s d√©s√©quilibr√©, 9 = tr√®s √©quilibr√©)
    - IMPORTANT: L'√©change doit se limiter √† environ 10 questions maximum
    - Chaque r√©ponse doit imp√©rativement contenir une question pour maintenir l'engagement`;
    }

    // Ajouter les informations du bilan si disponibles
    if (context.bilanData) {
      basePrompt += `\n\nINFORMATIONS DU PRE-BILAN DISPONIBLES:
      - Confort physique: ${context.bilanData.scores.principaux.confortPhysique}/9
      - √âquilibre √©motionnel: ${context.bilanData.scores.principaux.equilibreEmotionnel}/9
      - Qualit√© du sommeil: ${context.bilanData.scores.principaux.qualiteSommeil}/9
      - Niveau d'√©nergie: ${context.bilanData.scores.principaux.niveauEnergie}/9
      ${context.bilanData.douleurs ? `- Douleurs: ${context.bilanData.douleurs}` : ''}
      ${context.bilanData.notesPersonnelles ? `- Notes personnelles: ${context.bilanData.notesPersonnelles}` : ''}
      
      Note: Les scores vont de 1 (tr√®s d√©s√©quilibr√©) √† 9 (tr√®s √©quilibr√©). Utilise ces informations pour adapter tes recommandations.
      
      D√âCOUVERTE DE CAT√âGORIES PERSONNALIS√âES:
      - Pose des questions pour identifier d'autres aspects du bien-√™tre importants pour l'utilisateur
      - Demande des scores de 1 √† 9 pour ces nouvelles cat√©gories
      - Exemples: relations sociales, cr√©ativit√©, spiritualit√©, √©quilibre travail-vie, etc.
      - Ces informations enrichiront le bilan et permettront des recommandations plus personnalis√©es.`;
    }

    return basePrompt;
  }

  protected override getAddMessageOutputSchema(_context: ConversationContext): ChatBotOutputSchema {

    return {
      format: { 
        type: "json_schema",
        name: "ConversationResponse",
        schema: {
          type: "object",
          properties: {
            response: {
              type: "string",
              description: "R√©ponse principale de l'assistant Howana, maximum 25 mots."
            },
            quickReplies: {
              type: "array",
              items: {
                type: "object",
                properties: {
                  type: {
                    type: "string",
                    enum: ["text"],
                    description: "Type de quick reply: 'text' pour une r√©ponse simple"
                  },
                  text: {
                    type: "string",
                    description: "Texte de la suggestion (max 5 mots)"
                  },
                },
                required: ["type", "text"],
                additionalProperties: false
              },
              description: "1 √† 3 suggestions de r√©ponses courtes (max 5 mots chacune) pour l'utilisateur. Peuvent √™tre de type 'text' simple.",
              maxItems: 3,
              minItems: 0
            }
          },
          required: ["response", "quickReplies"],
          additionalProperties: false
        },
        strict: true
      }
    };
  }

  protected override getSummaryOutputSchema(context: ConversationContext): any {
    const constraints = this.getActivitiesAndPracticesConstraints(context);
    const { availableActivityIds, availablePracticeIds, availableActivityNames, availablePracticeNames, allAvailableIds } = constraints;

    console.log(`üìã [BILANS] Contraintes g√©n√©r√©es avec ${availableActivityIds.length} activit√©s et ${availablePracticeIds.length} pratiques:`, {
      availableActivityIds,
      availablePracticeIds,
      availableActivityNames,
      availablePracticeNames,
      allAvailableIds
    });

    return {
      format: { 
        type: "json_schema",
        name: "BilanSummary",
        schema: {
          type: "object",
          properties: {
            userProfile: {
              type: "object",
              properties: {
                supposedEmotionalState: {
                  type: "string",
                  description: "√âtat √©motionnel actuel de l'utilisateur, formul√© de son point de vue (ex: 'Je me sens stress√©', 'Je ressens de la fatigue')"
                },
                supposedCurrentNeeds: {
                  type: "array",
                  items: { type: "string" },
                  description: "Besoins actuels identifi√©s, formul√©s du point de vue de l'utilisateur (ex: 'J'ai besoin de me d√©tendre', 'Je veux retrouver de l'√©nergie')"
                },
                supposedPotentialChallenges: {
                  type: "array",
                  items: { type: "string" },
                  description: "D√©fis potentiels identifi√©s, formul√©s du point de vue de l'utilisateur (ex: 'En ce moment, je lutte avec le stress', 'Je me sens d√©pass√© par mes responsabilit√©s')"
                }
              },
              required: ["supposedEmotionalState", "supposedCurrentNeeds", "supposedPotentialChallenges"]
            },
            bilanAnalysis: {
              type: "object",
              properties: {
                scoresAnalysis: {
                  type: "string",
                  description: "Message destin√© √† l'utilisateur analysant vos scores de bilan et identifiant vos points d'am√©lioration (formul√© en vous parlant directement l'un a l'autre)"
                },
                customCategories: {
                  type: "array",
                  items: {
                    type: "object",
                    properties: {
                      categoryName: {
                        type: "string",
                        description: "Nom de la cat√©gorie personnalis√©e identifi√©e"
                      },
                      score: {
                        type: "number",
                        description: "Score de 1 √† 9 pour cette cat√©gorie"
                      },
                      description: {
                        type: "string",
                        description: "Message destin√© √† l'utilisateur d√©crivant cette cat√©gorie et pourquoi elle est importante pour vous (formul√© en vous parlant directement l'un a l'autre)"
                      }
                    },
                    required: ["categoryName", "score", "description"]
                  },
                  description: "Cat√©gories personnalis√©es identifi√©es lors de votre conversation avec leurs scores"
                }
              },
              required: ["scoresAnalysis", "customCategories"]
            },
            recommendations: {
              type: "array",
              items: {
                type: "object",
                properties: {
                  category: {
                    type: "string",
                    description: "Cat√©gorie d'am√©lioration (physique, √©motionnel, sommeil, √©nergie, ou personnalis√©e)"
                  },
                  priority: {
                    type: "string",
                    description: "Priorit√© de l'am√©lioration (haute, moyenne, basse)"
                  },
                  reasoning: {
                    type: "string",
                    description: "Message destin√© √† l'utilisateur expliquant pourquoi cette recommandation vous correspond (formul√© en vous parlant directement l'un a l'autre)"
                  },
                  // Champs h√©rit√©s de RecommendationChatBotService
                  recommendedCategories: {
                    type: "array",
                    minItems: availablePracticeIds.length > 0 ? 1 : 0,
                    maxItems: availablePracticeIds.length > 0 ? Math.max(2, availablePracticeIds.length) : 0,
                    items: {
                      type: "object",
                      properties: {
                        id: {
                          type: "string",
                          enum: availablePracticeIds,
                          description: "Identifiant unique de la pratique de bien-√™tre recommand√©e"
                        },
                        name: {
                          type: "string",
                          enum: availablePracticeNames,
                          description: "Titre de la pratique de bien-√™tre recommand√©e"
                        }
                      },
                      required: ["id", "name"],
                      additionalProperties: false
                    },
                    description: "Pratiques de bien-√™tre recommand√©es bas√©es sur l'analyse de votre bilan"
                  },
                  recommendedActivities: {
                    type: "array",
                    minItems: availableActivityIds.length > 0 ? 1 : 0,
                    maxItems: availableActivityIds.length > 0 ? Math.max(2, availableActivityIds.length) : 0,
                    items: {
                      type: "object",
                      properties: {
                        id: {
                          type: "string",
                          enum: availableActivityIds,
                          description: "Identifiant unique de l'activit√© de bien-√™tre recommand√©e"
                        },
                        name: {
                          type: "string",
                          enum: availableActivityNames,
                          description: "Titre de l'activit√© de bien-√™tre recommand√©e"
                        }
                      },
                      required: ["id", "name"],
                      additionalProperties: false
                    },
                    description: "Activit√©s de bien-√™tre recommand√©es bas√©es sur l'analyse de votre bilan"
                  },
                  activitiesReasons: {
                    type: "string",
                    description: "Message destin√© √† l'utilisateur expliquant pourquoi ces activit√©s vous correspondent (formul√© en vous parlant directement l'un a l'autre)"
                  },
                  practicesReasons: {
                    type: "string",
                    description: "Message destin√© √† l'utilisateur expliquant pourquoi ces pratiques vous correspondent (formul√© en vous parlant directement l'un a l'autre)"
                  },
                  relevanceScore: {
                    type: "number",
                    description: "Score de pertinence de la recommandation (0 = non pertinent, 1 = tr√®s pertinent)"
                  },
                  benefits: {
                    type: "array",
                    items: { type: "string" },
                    description: "Messages destin√©s √† l'utilisateur listant les b√©n√©fices concrets que vous pourrez retirer (formul√©s en vous parlant directement)"
                  }
                },
                required: ["category", "priority", "reasoning", "recommendedCategories", "recommendedActivities", "activitiesReasons", "practicesReasons", "relevanceScore", "benefits"]
              }
            },
            importanteKnowledge: {
              type: "array",
              items: { type: "string" },
              description: "Messages destin√©s √† l'utilisateur contenant les points cl√©s √† retenir pour optimiser votre parcours de bien-√™tre (formul√©s en vous parlant directement)"
            }
          },
          required: ["userProfile", "bilanAnalysis", "recommendations", "importanteKnowledge"],
          description: `R√©sum√© personnalis√© de votre bilan de bien-√™tre avec recommandations adapt√©es. Les recommandations sont contraintes aux ${allAvailableIds.length} √©l√©ments disponibles dans le contexte.`
        },
        strict: true
      }
    };
  }


  
  protected override buildFirstUserPrompt(_context: ConversationContext): string {
    return `Salue l'utilisateur et pr√©sente-toi en tant qu'assistant Howana sp√©cialis√© dans l'analyse des bilans de bien-√™tre.
    
    Indique que tu es l√† pour l'aider √† comprendre son bilan, identifier les points d'am√©lioration et lui proposer des recommandations personnalis√©es.
    
    Commence par un accueil chaleureux et pose une premi√®re question engageante pour l'accompagner dans l'analyse de son bilan.`;
  }

  protected override buildSummarySystemPrompt(_context: ConversationContext): string {
    return `Tu es un assistant sp√©cialis√© dans l'analyse de conversations de bilan de bien-√™tre. 
    Analyse la conversation et g√©n√®re un r√©sum√© structur√© qui permettra de comprendre l'√©tat de l'utilisateur, 
    l'analyse de son bilan et les recommandations propos√©es.
    
    IMPORTANT: Pour l'√©tat √©motionnel et les besoins, analyse-les du point de vue de l'utilisateur en utilisant des formulations comme "Je me sens...", "J'ai besoin de...", "Je ressens...". Cela facilitera le matching s√©mantique avec les activit√©s et pratiques.
    
    Note: Les suggestions de r√©ponses courtes (quickReplies) sont optionnelles et servent √† faciliter l'interaction utilisateur.`;
  }
}
